[{"D:\\niki\\React-Projects\\confusion\\src\\index.js":"1","D:\\niki\\React-Projects\\confusion\\src\\App.js":"2","D:\\niki\\React-Projects\\confusion\\src\\shared\\dishes.js":"3","D:\\niki\\React-Projects\\confusion\\src\\components\\MenuComponent.js":"4","D:\\niki\\React-projects\\confusion\\src\\index.js":"5","D:\\niki\\React-projects\\confusion\\src\\App.js":"6","D:\\niki\\React-projects\\confusion\\src\\shared\\dishes.js":"7","D:\\niki\\React-projects\\confusion\\src\\components\\MenuComponent.js":"8","D:\\niki\\React-projects\\confusion\\src\\components\\DishDetailComponent.js":"9","D:\\niki\\React-projects\\confusion\\src\\components\\MainComponent.js":"10","D:\\niki\\React-projects\\confusion\\src\\components\\HeaderComponent.js":"11","D:\\niki\\React-projects\\confusion\\src\\components\\FooterComponent.js":"12","D:\\niki\\React-projects\\confusion\\src\\components\\HomeComponent.js":"13","D:\\niki\\React-projects\\confusion\\src\\components\\ContactComponent.js":"14","D:\\niki\\React-projects\\confusion\\src\\shared\\leaders.js":"15","D:\\niki\\React-projects\\confusion\\src\\shared\\comments.js":"16","D:\\niki\\React-projects\\confusion\\src\\shared\\promotions.js":"17","D:\\niki\\React-projects\\confusion\\src\\components\\AboutComponent.js":"18","D:\\niki\\React-projects\\confusion\\src\\redux\\configureStore.js":"19","D:\\niki\\React-projects\\confusion\\src\\redux\\comments.js":"20","D:\\niki\\React-projects\\confusion\\src\\redux\\dishes.js":"21","D:\\niki\\React-projects\\confusion\\src\\redux\\promotions.js":"22","D:\\niki\\React-projects\\confusion\\src\\redux\\leaders.js":"23"},{"size":428,"mtime":1611777916204,"results":"24","hashOfConfig":"25"},{"size":646,"mtime":1611778440550,"results":"26","hashOfConfig":"25"},{"size":6065,"mtime":1611778395786,"results":"27","hashOfConfig":"25"},{"size":1825,"mtime":1611778332239,"results":"28","hashOfConfig":"25"},{"size":520,"mtime":1612026893297,"results":"29","hashOfConfig":"30"},{"size":493,"mtime":1613072336917,"results":"31","hashOfConfig":"30"},{"size":1490,"mtime":1612376460344,"results":"32","hashOfConfig":"30"},{"size":1189,"mtime":1612637869352,"results":"33","hashOfConfig":"30"},{"size":5307,"mtime":1613390661957,"results":"34","hashOfConfig":"30"},{"size":2114,"mtime":1613072655968,"results":"35","hashOfConfig":"30"},{"size":4918,"mtime":1612960269413,"results":"36","hashOfConfig":"30"},{"size":3027,"mtime":1612261180029,"results":"37","hashOfConfig":"30"},{"size":1004,"mtime":1612377623771,"results":"38","hashOfConfig":"30"},{"size":9295,"mtime":1613306639346,"results":"39","hashOfConfig":"30"},{"size":2382,"mtime":1612382142640,"results":"40","hashOfConfig":"30"},{"size":4279,"mtime":1612376484157,"results":"41","hashOfConfig":"30"},{"size":445,"mtime":1612377737157,"results":"42","hashOfConfig":"30"},{"size":3960,"mtime":1612701310187,"results":"43","hashOfConfig":"30"},{"size":448,"mtime":1613474213909,"results":"44","hashOfConfig":"30"},{"size":177,"mtime":1613474018129,"results":"45","hashOfConfig":"30"},{"size":169,"mtime":1613473927172,"results":"46","hashOfConfig":"30"},{"size":197,"mtime":1613474034355,"results":"47","hashOfConfig":"30"},{"size":173,"mtime":1613474076723,"results":"48","hashOfConfig":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14c1aef",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"vjiy6r",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"D:\\niki\\React-Projects\\confusion\\src\\index.js",[],"D:\\niki\\React-Projects\\confusion\\src\\App.js",[],"D:\\niki\\React-Projects\\confusion\\src\\shared\\dishes.js",[],"D:\\niki\\React-Projects\\confusion\\src\\components\\MenuComponent.js",[],"D:\\niki\\React-projects\\confusion\\src\\index.js",[],["99","100"],"D:\\niki\\React-projects\\confusion\\src\\App.js",[],"D:\\niki\\React-projects\\confusion\\src\\shared\\dishes.js",[],"D:\\niki\\React-projects\\confusion\\src\\components\\MenuComponent.js",[],"D:\\niki\\React-projects\\confusion\\src\\components\\DishDetailComponent.js",["101","102","103"],"import React,{Component} from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n//import CommentForm from './CommentFormComponent';\r\n\r\n\r\nimport { Button, Modal, ModalHeader, ModalBody,Row,Label } from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        isModalOpen: false,\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n  handleSubmit(values) {\r\n    console.log(\"Current State is: \" + JSON.stringify(values));\r\n    alert(\"Current State is: \" + JSON.stringify(values));\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil fa-lg\"></span>Submit Comment\r\n        </Button>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Row className=\"form-group col-12 \">\r\n                <Label htmlFor=\"rating\">Rating</Label>\r\n                <Control.select\r\n                  model=\".rating\"\r\n                  name=\"rating\"\r\n                  className=\"form-control\"\r\n                >\r\n                  <option>1</option>\r\n                  <option>2</option>\r\n                  <option>3</option>\r\n                  <option>4</option>\r\n                  <option>5</option>\r\n                </Control.select>\r\n              </Row>\r\n              <Row className=\"form-group col-12\">\r\n                <Label htmlFor=\"author\">Your name</Label>\r\n                <Control.text\r\n                  model=\".author\"\r\n                  id=\"author\"\r\n                  name=\"author\"\r\n                  placeholder=\"Your name\"\r\n                  className=\"form-control\"\r\n                  validators={{\r\n                    minLength: minLength(3),\r\n                    maxLength: maxLength(15),\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".author\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    minLength: \"Must be greater than 2 characters \",\r\n                    maxLength: \"Must be 15 characters or less\",\r\n                  }}\r\n                />\r\n              </Row>\r\n              <Row className=\"form-group col-12\">\r\n                <Label htmlFor=\"comment\">\r\n                  Comment\r\n                </Label>\r\n                  <Control.textarea\r\n                    model=\".comment\"\r\n                    id=\"comment\"\r\n                    name=\"comment\"\r\n                    rows=\"6 \"\r\n                    className=\"form-control\"\r\n                  />\r\n              </Row>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Login\r\n              </Button>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction RenderDish({ dish }) {\r\n  return (\r\n    <div className=\"col-12 col-md-5 m-1\">\r\n      <Card>\r\n        <CardImg top src={dish.image} alt={dish.name} />\r\n        <CardBody>\r\n          <CardTitle>{dish.name}</CardTitle>\r\n          <CardText>{dish.description}</CardText>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RenderComments({comments}) {\r\n  if (comments) {\r\n    const comment = comments.map((com) => {\r\n      const date = new Date(com.date);\r\n      const dateTimeFormat = new Intl.DateTimeFormat(\"en\", {\r\n        year: \"numeric\",\r\n        month: \"short\",\r\n        day: \"2-digit\",\r\n      });\r\n      return (\r\n        <>\r\n        <ul className=\"list-unstyled\">\r\n          <li key={com.id}>\r\n            <p>{com.comment}</p>\r\n          </li>\r\n          <br />\r\n          <li>\r\n            <p>\r\n              {\" \"}\r\n              -- {com.author} , {dateTimeFormat.format(date)}\r\n            </p>\r\n          </li>\r\n        </ul>\r\n        </>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <h4>Comments</h4>\r\n        {comment}\r\n        <CommentForm/>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/menu\">Menu</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"col-12\">\r\n          <h3>{props.dish.name}</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <RenderDish dish={props.dish} />\r\n        <RenderComments comments={props.comments} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DishDetail;\r\n","D:\\niki\\React-projects\\confusion\\src\\components\\MainComponent.js",[],"D:\\niki\\React-projects\\confusion\\src\\components\\HeaderComponent.js",[],"D:\\niki\\React-projects\\confusion\\src\\components\\FooterComponent.js",[],"D:\\niki\\React-projects\\confusion\\src\\components\\HomeComponent.js",[],"D:\\niki\\React-projects\\confusion\\src\\components\\ContactComponent.js",["104","105","106","107","108","109","110"],"import React, { Component } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    console.log(\"Current State is: \" + JSON.stringify(values));\r\n    alert(\"Current State is: \" + JSON.stringify(values));\r\n    // event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Contact Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Location Information</h3>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n              <br />\r\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n              <br />\r\n              <i className=\"fa fa-envelope\"></i>:{\" \"}\r\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n            <h5>Map of our Location</h5>\r\n          </div>\r\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n            <div className=\"btn-group\" role=\"group\">\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-primary\"\r\n                href=\"tel:+85212345678\"\r\n              >\r\n                <i className=\"fa fa-phone\"></i> Call\r\n              </a>\r\n              <a role=\"button\" className=\"btn btn-info\" href=\"tel:skype\">\r\n                <i className=\"fa fa-skype\"></i> Skype\r\n              </a>\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-success\"\r\n                href=\"mailto:confusion@food.net\"\r\n              >\r\n                <i className=\"fa fa-envelope-o\"></i> Email\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Send us your feedback</h3>\r\n          </div>\r\n          <div className=\"col-12 col-md-9\">\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"firstname\" md={2}>\r\n                  First Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".firstname\"\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"First Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".firstname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required \",\r\n                      minLength: \"Must be greater than 2 characters \",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"lastname\" md={2}>\r\n                  Last Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".lastname\"\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".lastname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required \",\r\n                      minLength: \"Must be greater than 2 characters \",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"telnum\" md={2}>\r\n                  Contact Tel.\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".telnum\"\r\n                    id=\"telnum\"\r\n                    name=\"telnum\"\r\n                    placeholder=\"Tel. Number\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(6),\r\n                      maxLength: maxLength(12),\r\n                      isNumber,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".telnum\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required \",\r\n                      minLength: \"Must be greater than 5 characters \",\r\n                      maxLength: \"Must be 12 characters or less \",\r\n                      isNumber: \"Must be a number \",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"email\" md={2}>\r\n                  Email\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      validEmail,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".email\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required \",\r\n                      validEmail: \"Invalid Email Address \",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 6, offset: 2 }}>\r\n                  <div className=\"form-check\">\r\n                    <Label check>\r\n                      <Control.checkbox\r\n                        model=\".agree\"\r\n                        name=\"agree\"\r\n                        className=\"form-check-input\"\r\n                      />{\" \"}\r\n                      <strong>May we contact you?</strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n                <Col md={{ size: 3, offset: 1 }}>\r\n                  <Control.select\r\n                    model=\".contactType\"\r\n                    name=\"contactType\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>Tel.</option>\r\n                    <option>Email</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"message\" md={2}>\r\n                  Your Feedback\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".message\"\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    rows=\"12\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Send Feedback\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </LocalForm>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Contact;\r\n","D:\\niki\\React-projects\\confusion\\src\\shared\\leaders.js",[],"D:\\niki\\React-projects\\confusion\\src\\shared\\comments.js",[],"D:\\niki\\React-projects\\confusion\\src\\shared\\promotions.js",[],["111","112"],"D:\\niki\\React-projects\\confusion\\src\\components\\AboutComponent.js",[],"D:\\niki\\React-projects\\confusion\\src\\redux\\configureStore.js",[],"D:\\niki\\React-projects\\confusion\\src\\redux\\comments.js",[],"D:\\niki\\React-projects\\confusion\\src\\redux\\dishes.js",[],"D:\\niki\\React-projects\\confusion\\src\\redux\\promotions.js",[],"D:\\niki\\React-projects\\confusion\\src\\redux\\leaders.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":52,"column":17,"nodeType":"119","endLine":56,"endColumn":18},{"ruleId":"117","severity":1,"message":"120","line":66,"column":17,"nodeType":"119","endLine":76,"endColumn":19},{"ruleId":"117","severity":1,"message":"121","line":91,"column":19,"nodeType":"119","endLine":97,"endColumn":21},{"ruleId":"117","severity":1,"message":"120","line":103,"column":19,"nodeType":"119","endLine":114,"endColumn":21},{"ruleId":"117","severity":1,"message":"120","line":132,"column":19,"nodeType":"119","endLine":143,"endColumn":21},{"ruleId":"117","severity":1,"message":"120","line":161,"column":19,"nodeType":"119","endLine":173,"endColumn":21},{"ruleId":"117","severity":1,"message":"120","line":192,"column":19,"nodeType":"119","endLine":202,"endColumn":21},{"ruleId":"117","severity":1,"message":"122","line":218,"column":23,"nodeType":"119","endLine":222,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":228,"column":19,"nodeType":"119","endLine":232,"endColumn":20},{"ruleId":"117","severity":1,"message":"121","line":243,"column":19,"nodeType":"119","endLine":249,"endColumn":21},{"ruleId":"113","replacedBy":"123"},{"ruleId":"115","replacedBy":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["125"],["126"],"no-global-assign","no-unsafe-negation"]